// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/prisma/generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Certificate {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  url       String   @db.VarChar(255)
}

model Project {
  id           Int      @id @default(autoincrement())
  uuid         String   @unique @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  title        String   @db.VarChar(255)
  description  String   @db.Text
  url_cover    String   @db.VarChar(255)
  technologies String[]
}

model Career {
  id            Int          @id @default(autoincrement())
  uuid          String       @unique @db.VarChar(255)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  position      String       @db.VarChar(100)
  company       String       @db.VarChar(100)
  logo          String       @db.VarChar(255)
  location      String       @db.VarChar(100)
  location_type LocationType
  type          JobType
  start_date    DateTime
  end_date      DateTime
  link          String       @db.VarChar(255)
}

model User {
  id            Int            @id @default(autoincrement())
  uuid          String         @unique @db.VarChar(255)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  email         String         @unique @db.VarChar(255)
  password      String         @db.VarChar(255)
  phone         String         @db.VarChar(100)
  name          String         @db.VarChar(100)
  role          Role
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique @db.VarChar(255)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  token      String   @db.VarChar(255)
  expires_at DateTime
  revoked    Boolean  @default(false)
  user_agent String   @db.VarChar(100)
  ip_address String   @db.VarChar(100)
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
}

enum LocationType {
  remote
  onSite
  hybrid
}

enum JobType {
  fullTime
  partTime
  contract
  internship
  volunteer
  temporary
  freelance
}

enum Role {
  admin
}
